@model Talentsprofile.DTO.Registeration
@{
    ViewBag.Title = "Register";
    Layout = "~/Views/Shared/Public.cshtml";
}
<h3>
    Register as an employer:</h3>
<hr style="margin-bottom: 25px" />
@{
    var displayOk = "none";
    var displayErr = "none";
    if (ViewData["status"] == "OK")
    {
        displayOk = "block";
    <div class="alert alert-success" name="msgStatus" style="display:@displayOk">
        <a href="#" class="alert-link"><strong>@ViewData["reg_title"]</strong></a><p>
            @ViewData["reg_msg"]</p>
    </div>
    }
    else if (!string.IsNullOrEmpty((string)ViewData["status"]))
    {
        displayErr = "block";
    <div class="alert alert-warning" name="msgStatus" style="display:@displayErr">
        <a href="#" class="alert-link"><strong>@ViewData["reg_title"]</strong></a><p>
            @ViewData["reg_msg"]</p>
    </div>
    }
}
<form class="form-horizontal" action="register" method="post" role="form" id="formRegister">
<div id="msgAlert" role="alert" style="display: none" class="alert alert-success alert-dismissible">
    <button type="button" class="close" data-dismiss="alert">
        <span aria-hidden="true">&times;</span><span class="sr-only">Close</span></button>
</div>
<div class="form-group">
    <label for="inputEmail3" class="col-sm-3 control-label">
        Company Name:</label>
    <div class="col-sm-8" id="div_companyname">
        @Html.TextBoxFor(name => name.Name, new { name = "companyname", id = "companyname", @class = "form-control", @placeholder = "Company name", @onblur = "ValidateCtrl('companyname', 'company name')" })
        <input type="hidden" value="register" name="reg_action" />
        <span class="glyphicon glyphicon-error form-control-feedback" style="display: none"
            id="span_companyname"></span>
    </div>
</div>
<div class="form-group">
    <label for="inputEmail3" class="col-sm-3 control-label">
        Email:</label>
    <div class="col-sm-8" id="div_email">
        @Html.TextBoxFor(email => email.Email, new { name = "email", id="email", @class = "form-control", @placeholder = "Email", @onblur = "ValidateCtrl('email')" })
        <span class="glyphicon glyphicon-error form-control-feedback" style="display: none"
            id="span_email"></span>
    </div>
</div>
<div class="form-group">
    <label for="inputPassword3" class="col-sm-3 control-label">
        Password:</label>
    <div class="col-sm-8" id="div_password">
        @Html.PasswordFor(pwd => pwd.Password, new { name = "password", id = "password", @class = "form-control", @placeholder = "Password", @onblur = "ValidateCtrl('password')" })
        <span class="glyphicon glyphicon-error form-control-feedback" style="display: none"
            id="span_password"></span>
    </div>
</div>
<div class="form-group">
    <label for="inputPassword3" class="col-sm-3 control-label">
        Re-type Password:</label>
    <div class="col-sm-8" id="div_retypepassword">
        @Html.PasswordFor(cnfpwd => cnfpwd.ConfirmPassword, new { name = "retypepassword", id = "retypepassword", @class = "form-control", @placeholder = "Re-type password", @onblur = "ValidateCtrl('retypepassword', 're-type password')" })
        <span class="glyphicon glyphicon-error form-control-feedback" style="display: none"
            id="span_retypepassword"></span>
    </div>
</div>
<div class="form-group">
    <label for="inputPassword3" class="col-sm-3 control-label">
        Country:</label>
    <div class="col-sm-6">
        <select class="form-control" id="Country" name="Country" onblur="ValidateLists('Country')">
            @{ 
                List<Talentsprofile.DTO.ListLookup> countries = Talentsprofile.BAL.Common.GetListValue(Talentsprofile.DTO.ListType.COUNTRY.ToString());
                foreach (Talentsprofile.DTO.ListLookup country in countries)
                {
                <option value="@country.Id">@country.Description</option>
                }
            }
        </select>
    </div>
</div>
<div class="form-group">
    <label for="inputPassword3" class="col-sm-3 control-label">
        Displayed Code:</label>
    <div class="col-sm-4" id="div_captcha">
        @Html.TextBoxFor(captcha => captcha.Captcha, new { name = "captcha",  id="captcha", @class = "form-control", @placeholder = "Enter displayed code", @onblur = "ValidateCtrl('captcha','captcha code')" })
        <span class="glyphicon glyphicon-ok form-control-feedback" style="display: none"
            id="span_captcha"></span>
    </div>
    <div class="col-sm-3 captchacode">@Convert.ToString(Session["captcha"])</div>
</div>
<div class="form-group">
    <label for="inputPassword3" class="col-sm-3 control-label">
    </label>
    <div class="col-sm-7">
        @Html.CheckBoxFor(agreed => agreed.IsAgreed, new { name = "agreed", id = "agreed" }) I have read
        all the terms and conditions and agreed to register.
    </div>
</div>
<div class="form-group">
    <div class="col-sm-offset-3 col-sm-10">
        <button type="submit" class="btn btn-primary btn-sm">
            Submit</button>
    </div>
</div>
</form>
<script src="../../Scripts/Views/Signup.js" type="text/javascript"></script>
